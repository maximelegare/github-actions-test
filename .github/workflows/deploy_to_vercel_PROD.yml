name: Deploy to vercel on PROD
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - uses: dkershner6/vercel-set-env-action@v3
      #   with:
      #     token: ${{ secrets.VERCEL_TOKEN }}
      #     projectName: partago
      #     envVariableKeys: NEXT_PUBLIC_CLIENTVAR,NODE_ENV
      #   env:
      #     NEXT_PUBLIC_CLIENTVAR: ${{ secrets.ENV_NEXT_PUBLIC_CLIENTVAR_PROD }}
      #     TARGET_NEXT_PUBLIC_CLIENTVAR: preview,development,production
      #     TYPE_NEXT_PUBLIC_CLIENTVAR: encrypted

      #     NODE_ENV: production
      #     TARGET_NODE_ENV: preview,development,production
      #     TYPE_NODE_ENV: encrypted

      - uses: amondnet/vercel-action@25 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GHUB_TOKEN }} #Optional
          vercel-args: >-
            --prod
            --env "NEXT_PUBLIC_CLIENTVAR=${{ secrets.ENV_NEXT_PUBLIC_CLIENTVAR_PROD }}"
            --env "NODE_ENV=production"
          vercel-org-id: ${{ secrets.VERCEL_ORGID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECTID}} #Required
          working-directory: ./ #If you are in a monorepo where you have backend code and frontend code, you can use this to only deploy your frontend code in the sub directory
          alias-domains: ${{ secrets.DOMAIN_PROD }} #Domain name for your deployment

